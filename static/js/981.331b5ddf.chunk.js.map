{"version":3,"file":"static/js/981.331b5ddf.chunk.js","mappings":"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","sources":["redux/contacts/contactsSelector.js","webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.jsx","webpack://react-homework-template/./src/components/Contact/Contact.module.css?03fd","components/Contact/Contact.jsx","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.jsx","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contacts.item;\n\nexport const selectLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectFilter = state => state.filter;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"label\":\"ContactForm_label__-cVXI\",\"input\":\"ContactForm_input__Bl93P\",\"wrap\":\"ContactForm_wrap__Z1N47\",\"button\":\"ContactForm_button__eSwX9\"};","import { useState } from 'react';\nimport css from './ContactForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { useDispatch } from 'react-redux';\nimport { addContact } from 'redux/contacts/contactsOperations';\nimport { useSelector } from 'react-redux';\nimport Notiflix from 'notiflix';\n\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(state => state.contacts.items);\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') setName(value);\n    else setNumber(value);\n  };\n\n  const createContact = (contact) => {\n    if (contacts) {\n    const double = contacts.find(\n        item =>\n          item.name.toLocaleLowerCase() === contact.name.toLocaleLowerCase()\n      )\n      if (double) {\n        return Notiflix.Report.failure(`${contact.name} is already in contacts`);\n      }\n      dispatch(addContact(contact));\n    }\n  }\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    createContact({\n      name,\n      number,\n      id: nanoid(),\n    });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form className={css.form} onSubmit={handleSubmit}>\n      <div className={css.wrap}>\n        <label className={css.label} htmlFor=\"exampleNameInputId\">\n          {' '}\n          Name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label className={css.label} htmlFor=\"exampleNumberInputId\">\n          {' '}\n          Number\n          <input\n            className={css.input}\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n      <div className={css.wrap}>\n        <button className={css.button} type=\"submit\">\n          Add Contacts\n        </button>\n      </div>\n    </form>\n  );\n};\n\n","// extracted by mini-css-extract-plugin\nexport default {\"btn\":\"Contact_btn__JzanX\",\"text\":\"Contact_text__Wq-3f\"};","import PropTypes from 'prop-types';\nimport css from './Contact.module.css';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\n\nexport const Contact = ({ name, number, id}) => {\n  const dispatch = useDispatch();\n\n  return (\n    <>\n      <p className={css.text}>{name}: </p>\n      <span className={css.text}> {number} </span>\n\n      <button\n        className={css.btn}\n        type=\"button\"\n        onClick={() => dispatch(deleteContact(id))}\n      >\n        Delete\n      </button>\n    </>\n  );\n};\n\nContact.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  \n};\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"ContactList_list__csErn\",\"item\":\"ContactList_item__EZYHO\"};","import { Contact } from '../Contact/Contact';\nimport css from './ContactList.module.css';\nimport { useSelector } from 'react-redux';\n\nexport const ContactList = () => {\n  const contacts = useSelector(state => state.contacts.items);\n  const filter = useSelector(state => state.filter);\n\n  const getContacts = () => {\n    if (filter) {\n      return contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase().trim())\n      );\n    } else {\n      return contacts;\n    }\n  };\n  const filterContacts = getContacts();\n\n  return (\n    <ul className={css.list}>\n      {filterContacts &&\n        filterContacts.map(contact => {\n          return (\n            <li className={css.item} key={contact.id}>\n              <Contact\n                name={contact.name}\n                number={contact.number}\n                id={contact.id}\n              />\n            </li>\n          );\n        })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"wrap\":\"Filter_wrap__Rb02z\",\"title\":\"Filter_title__pSkfx\",\"container\":\"Filter_container__L5eml\",\"input\":\"Filter_input__N7T3z\",\"label\":\"Filter_label__vEd1E\"};","import css from './Filter.module.css';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from '../../redux/filter/filterSlice';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(state => state.filter);\n\n  const changeFilterValue = evt => {\n    dispatch(filterContact(evt.target.value));\n  };\n\n  return (\n    <>\n      <div className={css.wrap}>\n        <h2 className={css.title}>Contacts</h2>\n      </div>\n      <div className={css.container}>\n        <label className={css.label}>\n          Find contacts by name\n          <input\n            className={css.input}\n            type=\"text\"\n            name=\"contacts\"\n            value={filter}\n            onChange={changeFilterValue}\n            required\n          />\n        </label>\n      </div>\n    </>\n  );\n};\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchContacts } from 'redux/contacts/contactsOperations';\nimport { selectLoading } from 'redux/contacts/contactsSelector';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\n\nconst ContactsPage = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      <title>Your contacts</title>\n      <ContactForm />\n      <Filter />\n      <div>{isLoading && 'Request in progress...'}</div>\n      <ContactList />\n    </>\n  );\n};\n\nexport default ContactsPage;\n"],"names":["selectLoading","state","contacts","isLoading","ContactForm","dispatch","useDispatch","useSelector","items","useState","name","setName","number","setNumber","handleChange","evt","target","value","reset","className","css","onSubmit","preventDefault","contact","find","item","toLocaleLowerCase","Notiflix","addContact","createContact","id","nanoid","htmlFor","type","onChange","pattern","title","required","Contact","onClick","deleteContact","ContactList","filter","filterContacts","toLowerCase","includes","trim","map","Filter","filterContact","useEffect","fetchContacts"],"sourceRoot":""}