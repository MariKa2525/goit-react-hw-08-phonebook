{"version":3,"file":"static/js/751.92e6d1c9.chunk.js","mappings":"wTAaaA,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA0BF,EAAAA,EAAAA,UAAS,IAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAgCJ,EAAAA,EAAAA,UAAS,IAAzC,eAAOK,EAAP,KAAiBC,EAAjB,KAEMC,EAAe,SAAAC,GACnB,MAAwBA,EAAIC,OAApBR,EAAR,EAAQA,KAAMS,EAAd,EAAcA,MACD,SAATT,EAAiBC,EAAQQ,GACX,UAATT,EAAkBG,EAASM,GAC/BJ,EAAYI,EAClB,EAQKC,EAAQ,WACZT,EAAQ,IACRE,EAAS,IACTE,EAAY,GACb,EAED,OACE,UAACM,EAAA,EAAD,CAAWC,UAAU,OAAOC,SAAS,KAArC,WACE,SAACC,EAAA,GAAD,KACA,UAACC,EAAA,EAAD,CACEC,GAAI,CACFC,UAAW,EACXC,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,WAQE,SAACC,EAAA,EAAD,CAAQL,GAAI,CAAEM,EAAG,EAAGC,QAAS,qBAC7B,SAACC,EAAA,EAAD,CAAYZ,UAAU,KAAKa,QAAQ,KAAnC,sBAGA,UAACV,EAAA,EAAD,CAAKH,UAAU,OAAOc,YAAU,EAACC,SA3BlB,SAAApB,GACnBA,EAAIqB,iBACJ/B,GAASgC,EAAAA,EAAAA,IAAS,CAAE7B,KAAAA,EAAME,MAAAA,EAAOE,SAAAA,KACjCM,GACD,EAuB8DM,GAAI,CAAEc,GAAI,GAAnE,WACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,QAAS,EAAzB,WACE,SAACF,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACC,EAAA,EAAD,CACEC,aAAa,aACbtC,KAAK,OACLuC,UAAQ,EACRC,WAAS,EACTC,GAAG,OACHC,MAAM,OACNC,WAAS,EACTlC,MAAOT,EACP4C,SAAUtC,OAGd,SAACyB,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACE,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTC,GAAG,QACHC,MAAM,gBACN1C,KAAK,QACLsC,aAAa,QACbO,KAAK,QACLpC,MAAOP,EACP0C,SAAUtC,OAGd,SAACyB,EAAA,GAAD,CAAMG,MAAI,EAACC,GAAI,GAAf,UACE,SAACE,EAAA,EAAD,CACEE,UAAQ,EACRC,WAAS,EACTxC,KAAK,WACL0C,MAAM,WACNG,KAAK,WACLJ,GAAG,WACHhC,MAAOL,EACPwC,SAAUtC,EACVgC,aAAa,uBAInB,SAACQ,EAAA,EAAD,CACED,KAAK,SACLL,WAAS,EACTf,QAAQ,YACRT,GAAI,CAAEc,GAAI,EAAGiB,GAAI,GAJnB,sBAQA,SAAChB,EAAA,GAAD,CAAMC,WAAS,EAACgB,eAAe,qBAKxC,E,UChGD,EATqB,WACnB,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,WACE,6CACA,SAACtD,EAAD,MAGL,C,qBCTD,KAAgB,UAAY,wBAAwB,MAAQ,oB","sources":["components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx","webpack://react-homework-template/./src/pages/page.module.css?f580"],"sourcesContent":["import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'redux/auth/auth-operation';\nimport * as React from 'react';\nimport Avatar from '@mui/material/Avatar';\nimport Button from '@mui/material/Button';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport TextField from '@mui/material/TextField';\nimport Grid from '@mui/material/Grid';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\nimport Container from '@mui/material/Container';\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const handleChange = evt => {\n    const { name, value } = evt.target;\n    if (name === 'name') setName(value);\n    else if (name === 'email') setEmail(value);\n    else setPassword(value);\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(register({ name, email, password }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <Box\n        sx={{\n          marginTop: 8,\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Avatar sx={{ m: 1, bgcolor: 'secondary.main' }}></Avatar>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign up\n        </Typography>\n        <Box component=\"form\" noValidate onSubmit={handleSubmit} sx={{ mt: 3 }}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"given-name\"\n                name=\"name\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"name\"\n                autoFocus\n                value={name}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                value={password}\n                onChange={handleChange}\n                autoComplete=\"new-password\"\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            sx={{ mt: 3, mb: 2 }}\n          >\n            Sign Up\n          </Button>\n          <Grid container justifyContent=\"flex-end\"></Grid>\n        </Box>\n      </Box>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport css from './page.module.css';\n\nconst RegisterPage = () => {\n  return (\n    <div className={css.container}>\n      <title>Registration</title>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default RegisterPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"page_container__oNGKx\",\"title\":\"page_title__fhaD7\"};"],"names":["RegisterForm","dispatch","useDispatch","useState","name","setName","email","setEmail","password","setPassword","handleChange","evt","target","value","reset","Container","component","maxWidth","CssBaseline","Box","sx","marginTop","display","flexDirection","alignItems","Avatar","m","bgcolor","Typography","variant","noValidate","onSubmit","preventDefault","register","mt","Grid","container","spacing","item","xs","sm","TextField","autoComplete","required","fullWidth","id","label","autoFocus","onChange","type","Button","mb","justifyContent","className","css"],"sourceRoot":""}